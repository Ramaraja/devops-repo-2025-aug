pipeline {
    agent { docker { image 'python:3.12.0-alpine3.18' } }

    stages {
        stage('Setup Environment') {
            steps {
                // Install dependencies
                sh 'python3 -m venv venv'
                sh '. venv/bin/activate && pip install -r jenkins/sample-project-1/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                // Run pytest and generate a JUnit XML report
                sh '. venv/bin/activate && pytest jenkins/sample-project-1 --junitxml=reports/results.xml'
            }
        }

        stage('Archive Results') {
            steps {
                // Archive the test results in Jenkins
                junit 'reports/results.xml'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh 'rm -rf venv'
        }
        success {
            echo 'Tests executed successfully!'
        }
        failure {
            echo 'Some tests failed.'
        }
    }
}
